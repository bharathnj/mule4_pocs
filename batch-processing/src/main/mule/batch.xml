<?xml version="1.0" encoding="UTF-8"?>

<mule xmlns:db="http://www.mulesoft.org/schema/mule/db" xmlns:batch="http://www.mulesoft.org/schema/mule/batch"
	xmlns:ee="http://www.mulesoft.org/schema/mule/ee/core"
	xmlns:file="http://www.mulesoft.org/schema/mule/file" xmlns="http://www.mulesoft.org/schema/mule/core" xmlns:doc="http://www.mulesoft.org/schema/mule/documentation" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
http://www.mulesoft.org/schema/mule/file http://www.mulesoft.org/schema/mule/file/current/mule-file.xsd
http://www.mulesoft.org/schema/mule/ee/core http://www.mulesoft.org/schema/mule/ee/core/current/mule-ee.xsd
http://www.mulesoft.org/schema/mule/batch http://www.mulesoft.org/schema/mule/batch/current/mule-batch.xsd
http://www.mulesoft.org/schema/mule/db http://www.mulesoft.org/schema/mule/db/current/mule-db.xsd">
	<file:config name="File_Config" doc:name="File Config" doc:id="0684938d-0032-4e02-a4fe-36d0e05fa950" >
		<file:connection workingDir="C:\Users\BharathJ\Desktop\MuleSoft\cognixia\file" />
	</file:config>
	<db:config name="Database_Config" doc:name="Database Config" doc:id="2244e325-e5fe-45ba-85d0-b731b79c53da" >
		<db:my-sql-connection host="127.0.0.1" port="3306" user="root" password="root" database="muletrainingdb" />
	</db:config>
	<flow name="batchFlow" doc:id="578fa93b-f0d0-4418-af66-b9ca3196a0ba" >
		<file:listener doc:name="On New or Updated File" doc:id="287c9e45-bb4d-498e-9a93-38fd9d6bbbef" config-ref="File_Config" directory="input" autoDelete="true">
			<scheduling-strategy >
				<fixed-frequency frequency="30" timeUnit="SECONDS"/>
			</scheduling-strategy>
		</file:listener>
		<ee:transform doc:name="Transform Message" doc:id="18946fa2-d033-4419-8593-457d4972ed80" >
			<ee:message >
				<ee:set-payload ><![CDATA[%dw 2.0
output application/java
---
payload]]></ee:set-payload>
			</ee:message>
		</ee:transform>
		<set-variable value="#[sizeOf(payload)]" doc:name="size" doc:id="42186a9f-def4-4179-bc7d-f5946edc47bf" variableName="size"/>
		<batch:job jobName="batchBatch_Job" doc:id="3298ac12-9865-43dc-bfce-5e1a1ba9a306" >
			<batch:process-records >
				<batch:step name="step1" doc:id="22c4b867-2449-4f4f-9e0f-98e7a08fa66e" >
					<logger level="INFO" doc:name="Logger" doc:id="702b3052-8beb-43c5-a745-8de823188e97" message="batch1"/>
					<ee:transform doc:name="Transform Message" doc:id="204a8574-8fcf-428d-b076-7644e382fa24" >
						<ee:message >
						</ee:message>
						<ee:variables >
							<ee:set-variable variableName="myname" ><![CDATA[%dw 2.0
output application/java
---
payload.Name as String]]></ee:set-variable>
							<ee:set-variable variableName="mycity" ><![CDATA[%dw 2.0
output application/java
---
payload.City as String]]></ee:set-variable>
						</ee:variables>
					</ee:transform>
					<db:select doc:name="Select" doc:id="5db4528e-62cd-4ac6-9ad2-537cac70de2f" config-ref="Database_Config" target="isPresent" targetValue="#[sizeOf(payload) &gt; 0]">
						<db:sql >select * from sales where Name=:myname and City=:mycity</db:sql>
						<db:input-parameters ><![CDATA[#[%dw 2.0
output application/java
---
{
	mycity: vars.mycity,
	myname: vars.myname
}]]]></db:input-parameters>
					</db:select>
				</batch:step>
				<batch:step name="Step2" doc:id="c8ca9da0-501c-421e-80dd-0fb4e3873356" acceptExpression="#[not vars.isPresent]">
					<logger level="INFO" doc:name="Logger" doc:id="6a7f7612-33dc-44e5-9742-19a6469d80cc" message="batch2"/>
					<batch:aggregator doc:name="Batch Aggregator" doc:id="6a815670-b868-432e-8f00-6c47cfdc83ee" size="20">
						<logger level="INFO" doc:name="Logger" doc:id="612da732-2b60-48ec-9d38-d68b1e6bc637" message="#['In Aggregator=== size is' ++ sizeOf(payload)]"/>
						<db:bulk-insert doc:name="Bulk insert" doc:id="725e3ed3-0f32-43f3-b877-edca07dadc94" config-ref="Database_Config">
							<db:bulk-input-parameters ><![CDATA[#[output application/java
---
vars.records map ( record , indexOfRecord ) -> {
	mycity: record.variables.mycity,
	myname: record.variables.myname
}]]]></db:bulk-input-parameters>
							<db:sql >insert into sales(Name,City) values(:myname, :mycity )</db:sql>
						</db:bulk-insert>
					</batch:aggregator>
				</batch:step>
			</batch:process-records>
			<batch:on-complete >
				<logger level="INFO" doc:name="Logger" doc:id="978e426b-05e2-446c-a66f-773b811b62d4" message="#[payload.processedRecords]"/>
			</batch:on-complete>
		</batch:job>
	</flow>
</mule>
